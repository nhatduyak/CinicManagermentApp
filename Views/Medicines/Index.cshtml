@using ClinicManagement.Menu
@inject AdminSidebarService _AdminSidebarService
@model IEnumerable<ClinicManagement.Models.Medicines>

@{
    ViewData["Title"] = "Danh sách thuốc";
    SortModel sortModel = (SortModel)ViewData["sortModel"];

    PagerModel pager = ViewBag.Pager;
}

<partial name="_StatusMessage" />


<div class="container-fluid btn-group">
<p>
    <a asp-action="Create" class="btn btn-success"><i class="fas fa-plus"></i></a>
</p>
</div>
<br/>
<div class="row">
    <div class="col-12">
        <partial name="_topBar" model="@pager" />
    </div>
</div>
<table class="table">
    <thead>
        <th>
            <i class="@sortModel.GetColumn("code").SortIcon" arial-hidden="true"></i>
                <a asp-action="Index" asp-route-sortExpression="@sortModel.GetColumn("code").SortExpression">
                    @Html.DisplayNameFor(model => model.Code)
                </a>
            </th>
            <th>
                <i class="@sortModel.GetColumn("name").SortIcon" arial-hidden="true"></i>
                <a asp-action="Index" asp-route-sortExpression="@sortModel.GetColumn("name").SortExpression">
                    @Html.DisplayNameFor(model => model.Name)
                </a>
            </th>
            <th>
                <i class="@sortModel.GetColumn("Category").SortIcon" arial-hidden="true"></i>
                <a asp-action="Index" asp-route-sortExpression="@sortModel.GetColumn("Category").SortExpression">
                    @Html.DisplayNameFor(model => model.Category)
                </a>
            </th>
            <th>
                <i class="@sortModel.GetColumn("name").SortIcon" arial-hidden="true"></i>
                <a asp-action="Index" asp-route-sortExpression="@sortModel.GetColumn("name").SortExpression">
                    @Html.DisplayNameFor(model => model.Units)
                </a>
            </th>
            <th>
                <i class="@sortModel.GetColumn("unitprice").SortIcon" arial-hidden="true"></i>
                <a asp-action="Index" asp-route-sortExpression="@sortModel.GetColumn("unitprice").SortExpression">
                    @Html.DisplayNameFor(model => model.UnitPrice)
                </a>
            </th>
            <th>
                <i class="@sortModel.GetColumn("SellPrice").SortIcon" arial-hidden="true"></i>
                <a asp-action="Index" asp-route-sortExpression="@sortModel.GetColumn("SellPrice").SortExpression">
                    @Html.DisplayNameFor(model => model.SellPrice)
                </a>
            </th>
            <th>
                 <i class="@sortModel.GetColumn("Quantity").SortIcon" arial-hidden="true"></i>
                <a asp-action="Index" asp-route-sortExpression="@sortModel.GetColumn("Quantity").SortExpression">
                @Html.DisplayNameFor(model => model.Quantity)
                </a>
            </th>
            <th>
                <i class="@sortModel.GetColumn("ExpiryDate").SortIcon" arial-hidden="true"></i>
                <a asp-action="Index" asp-route-sortExpression="@sortModel.GetColumn("ExpiryDate").SortExpression">
                    @Html.DisplayNameFor(model => model.ExpiryDate)
                </a>
            </th>     
             <th>
                <i class="@sortModel.GetColumn("DateCreate").SortIcon" arial-hidden="true"></i>
                <a asp-action="Index" asp-route-sortExpression="@sortModel.GetColumn("DateCreate").SortExpression">
                    @Html.DisplayNameFor(model => model.DateCreate)
                </a>
            </th>                      
           
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Units.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SellPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpiryDate)
            </td>          
            <td>
                @Html.DisplayFor(modelItem => item.DateCreate)
            </td>             
            <td>
                <div class="btn-group">
                        <a asp-action="Edit" asp-route-id="@item.ID">
                            <span class="btn btn-sm btn-outline-primary">
                                <i class="fa fa-edit" aria-hidden="true"></i>
                            </span>
                        </a>

                        <a asp-action="Details" asp-route-id="@item.ID">
                            <span class="btn btn-sm btn-outline-dark">
                                <i class="fa fa-eye" aria-hidden="true"></i>
                            </span>
                        </a>

                        <a asp-action="Delete" asp-route-id="@item.ID">
                            <span class="btn btn-sm btn-outline-danger">
                                <i class="fa fa-trash" aria-hidden="true"></i>
                            </span>
                        </a>
                 </div>
            </td>
        </tr>
}
    </tbody>
</table>
<div class="row">
    <div class="col-12">
        <partial name="_bottomBar" model="@pager" />
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}
@section Sidebar
{
    @Html.Raw(_AdminSidebarService.renderHtml())
}